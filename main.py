import streamlit as st
from qa_engine import ask_question
import uuid
import os
os.environ["TOKENIZERS_PARALLELISM"] = "false"


if not os.path.exists("faiss_index/index.faiss"):
    import ingest
    ingest.ingest()


st.set_page_config(page_title="–ß–∞—Ç-–±–æ—Ç QubitAI", layout="wide")


# üíÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ç–∏–ª—å
style_path = "styles.css"
with open(style_path) as f:
    st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)


WELCOME_MESSAGE = """üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç QubitAI.  
–Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö —á–∞—Ç-–±–æ—Ç–æ–≤, —Å—Ä–æ–∫–∞—Ö, —ç—Ç–∞–ø–∞—Ö, –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è—Ö –∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏.

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å ‚Äî —è –æ—Ç–≤–µ—á—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞."""

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏
if "chats" not in st.session_state:
    st.session_state["chats"] = {}

if "active_chat" not in st.session_state or st.session_state["active_chat"] not in st.session_state["chats"]:
    chat_id = str(uuid.uuid4())[:8]
    st.session_state["chats"][chat_id] = [{
        "user": None,
        "bot": WELCOME_MESSAGE
    }]
    st.session_state["active_chat"] = chat_id

# === SIDEBAR ===
st.sidebar.title("üí¨ –í–∞—à–∏ —á–∞—Ç—ã")

# –ö–Ω–æ–ø–∫–∞: –ù–æ–≤—ã–π —á–∞—Ç
if st.sidebar.button("–ù–æ–≤—ã–π —á–∞—Ç"):
    if len(st.session_state["chats"]) >= 3:
        oldest_chat = list(st.session_state["chats"].keys())[0]
        del st.session_state["chats"][oldest_chat]

    new_id = str(uuid.uuid4())[:8]
    st.session_state["chats"][new_id] = [{
        "user": None,
        "bot": WELCOME_MESSAGE
    }]
    st.session_state["active_chat"] = new_id

# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É —á–∞—Ç–∞–º–∏
for cid in st.session_state["chats"]:
    if st.sidebar.button(f"üí≠ –ß–∞—Ç {cid}", key=f"select_{cid}"):
        st.session_state["active_chat"] = cid

# === MAIN CHAT ZONE ===
st.title("ü§ñ QubitAI –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç")

active_id = st.session_state["active_chat"]
chat_history = st.session_state["chats"][active_id]

# –í—ã–≤–æ–¥ –∏—Å—Ç–æ—Ä–∏–∏
for entry in chat_history:
    if entry["user"]:
        with st.chat_message("user"):
            st.write(entry["user"])
    if entry["bot"]:
        with st.chat_message("assistant"):
            st.write(entry["bot"])

# –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
query = st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å...")

if query:
    with st.chat_message("user"):
        st.write(query)

    with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞..."):
        answer = ask_question(query)

    with st.chat_message("assistant"):
        st.write(answer)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    st.session_state["chats"][active_id].append({
        "user": query,
        "bot": answer
    })
